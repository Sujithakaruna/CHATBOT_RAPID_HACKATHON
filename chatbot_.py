# -*- coding: utf-8 -*-
"""CHATBOT .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/185Iez8ScliySLaMBdG3KhPh_-xbDxhO2
"""

!pip install gradio duckduckgo-search newspaper3k transformers

from duckduckgo_search import DDGS

def search_news_links(company_name, max_results=5):
    query = f"{company_name} latest news"
    with DDGS() as ddgs:
        results = [r for r in ddgs.text(query, max_results=max_results)]
        return [r["href"] for r in results if "href" in r]

# Test it (optional):
# print(search_news_links("Apple"))

!pip install newspaper3k lxml_html_clean

from newspaper import Article

def extract_news_content(url):
    try:
        article = Article(url)
        article.download()
        article.parse()
        return article.text
    except:
        return ""

from transformers import pipeline

# Load an open-source summarizer
summarizer = pipeline("summarization", model="sshleifer/distilbart-cnn-12-6")

def summarize_text(text):
    if len(text) > 1000:
        text = text[:1000]  # Truncate if too long
    summary = summarizer(text, max_length=120, min_length=30, do_sample=False)
    return summary[0]['summary_text']

import random

def is_greeting(text):
    greetings = ["hi", "hello", "hey", "how are you", "good morning", "good evening"]
    return any(greet in text.lower() for greet in greetings)

def handle_greeting():
    responses = ["Hey there!", "Hello! ðŸ‘‹", "Hi, how can I help you today?"]
    return random.choice(responses)

def get_news_summary(company_name, style="Formal"):
    links = search_news_links(company_name)
    if not links:
        return "Sorry, I couldn't find any news. Maybe check the spelling?"

    summaries = []
    for url in links:
        content = extract_news_content(url)
        if content:
            summary = summarize_text(content)
            if style == "Casual":
                summary = f"So guess what? Here's something new about {company_name}: {summary}"
            elif style == "Bullet Points":
                summary = "â€¢ " + summary.replace(". ", ".\nâ€¢ ")
            summaries.append(f"{summary}\n[Read more]({url})")

    return "\n\n".join(summaries)

import gradio as gr

def chatbot_interface(user_input, style):
    if is_greeting(user_input):
        return handle_greeting()
    else:
        return get_news_summary(user_input, style)

style_options = ["Formal", "Casual", "Bullet Points"]

gr.Interface(fn=chatbot_interface,
             inputs=[gr.Textbox(label="Ask about any company..."),
                     gr.Radio(style_options, label="Choose your style")],
             outputs="text",
             title="ðŸ“¡ Smart Company News Chatbot ðŸ¤–",
             description="Get the latest news about any company with AI summaries!"
             ).launch()